services:
  # Servico da API em .NET 9
  api:
    build:
      context: ./backend/VialoginTimeTrackingAPI
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=database;Port=5432;Database=vialogintest;Username=postgres;Password=postgres;Pooling=true;Minimum Pool Size=1;Maximum Pool Size=100;
      - RabbitMq__HostName=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
      database:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
  migrations:
    build:
      context: ./backend/VialoginTimeTrackingAPI
      dockerfile: Dockerfile.migrations
    depends_on:
      database:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=database;Port=5432;Database=vialogintest;Username=postgres;Password=postgres;Pooling=true;Minimum Pool Size=1;Maximum Pool Size=100;
    restart: "no"

  # Servico de Testes para o backend
  # tests:
  #   build:
  #     context: ./backend/VialoginTimeTrackingTests
  #     dockerfile: Dockerfile.tests
  #   depends_on:
  #     - api
  #     - database
  #     - rabbitmq

  # Servico do Frontend em React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80" # Mapeia a porta 3000 para a porta 80 do contêiner
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro # Atualizações no nginx.conf são refletidas no contêiner
    environment:
      - VITE_API_URL=http://localhost:5000
      - VITE_SECRET_KEY=xgnyWu8aBvXVsr6JM4dNhGSHT5Az3ZQK
      - REACT_APP_API_URL=http://localhost:5000
      - REACT_APP_SECRET_KEY=xgnyWu8aBvXVsr6JM4dNhGSHT5Az3ZQK
    restart: always
    depends_on:
      api:
        condition: service_healthy

  # Banco de Dados PostgreSQL
  database:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: vialogintest
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  # RabbitMQ para mensageria
  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"   # Porta do RabbitMQ
      - "15672:15672" # Interface de gerenciamento
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
